AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'badge-awarding-service

  Sample SAM Template for badge-awarding-service

  '
Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  HealthFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: HealthFunction
    Properties:
      CodeUri: HealthFunction
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - x86_64
      Events:
        CatchHello:
          Type: Api
          Properties:
            Path: /health
            Method: GET
      Environment:
        Variables:
          PARAM1: VALUE
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: HelloWorldFunction
    Properties:
      CodeUri: HelloWorldFunction
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - x86_64
      Events:
        CatchHello:
          Type: Api
          Properties:
            Path: /hello
            Method: GET
        CatchProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: GET
      Environment:
        Variables:
          PARAM1: VALUE
  UnsubscribeFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
      SamResourceId: UnsubscribeFunction
    Properties:
      CodeUri: UnsubscribeFunction
      Handler: bootstrap
      Runtime: provided.al2023
      Architectures:
      - x86_64
    Events:
      SQSTrigger:
        Type: SQS
        Properties:
          Queue:
            Fn::Sub: arn:aws:sns:ap-northeast-1:${AWS::AccountId}:TestMailTopic
      Environment:
        Variables:
          SNS_TOPIC_ARN:
            Fn::Sub: arn:aws:sns:ap-northeast-1:${AWS::AccountId}:TestMailTopic
          QUEUE_URL:
            Fn::Sub: https://sqs.ap-northeast-1.amazonaws.com/${AWS::AccountId}/TestQueue
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  HelloWorldAPI:
    Description: API Gateway endpoint URL for Prod environment for First Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: First Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
